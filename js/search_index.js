var search_data = {"index":{"searchIndex":["deeplapi","cli","deepl","errors","deeplauthorizationerror","deeplbaseerror","deepldeserializationerror","deeplservererror","formality","splitsentences","usageinformation","exit_on_failure?()","languages()","new()","new()","source_languages()","target_languages()","translate()","translate()","usage_information()","usage_information()","changelog","license","readme","deepl"],"longSearchIndex":["deeplapi","deeplapi::cli","deeplapi::deepl","deeplapi::errors","deeplapi::errors::deeplauthorizationerror","deeplapi::errors::deeplbaseerror","deeplapi::errors::deepldeserializationerror","deeplapi::errors::deeplservererror","deeplapi::formality","deeplapi::splitsentences","deeplapi::usageinformation","deeplapi::cli::exit_on_failure?()","deeplapi::cli#languages()","deeplapi::deepl::new()","deeplapi::usageinformation::new()","deeplapi::deepl#source_languages()","deeplapi::deepl#target_languages()","deeplapi::cli#translate()","deeplapi::deepl#translate()","deeplapi::cli#usage_information()","deeplapi::deepl#usage_information()","","","",""],"info":[["DeeplAPI","","DeeplAPI.html","","<p>Requirements\n<p>You need to have a valid DeepL Pro Developer account\nwith an associated API key. This key ...\n"],["DeeplAPI::CLI","","DeeplAPI/CLI.html","","<p>This class implements the <code>deepl</code> command line utility.\n"],["DeeplAPI::DeepL","","DeeplAPI/DeepL.html","","<p>The main API entry point representing a DeepL developer account with an associated API key.\n<p>Use this to …\n"],["DeeplAPI::Errors","","DeeplAPI/Errors.html","","<p>DeepL API exception classes.\n"],["DeeplAPI::Errors::DeeplAuthorizationError","","DeeplAPI/Errors/DeeplAuthorizationError.html","","<p>Authorization failed.\n"],["DeeplAPI::Errors::DeeplBaseError","","DeeplAPI/Errors/DeeplBaseError.html","","<p>Base class for exceptions in this module.\n"],["DeeplAPI::Errors::DeeplDeserializationError","","DeeplAPI/Errors/DeeplDeserializationError.html","","<p>Exception raised when deserialization the server response.\n"],["DeeplAPI::Errors::DeeplServerError","","DeeplAPI/Errors/DeeplServerError.html","","<p>Received an error message from the server.\n"],["DeeplAPI::Formality","","DeeplAPI/Formality.html","","<p>Translation option that controls the desired translation formality\n<p><code>Formality::LESS</code> - Translate less formally. …\n"],["DeeplAPI::SplitSentences","","DeeplAPI/SplitSentences.html","","<p>Translation option that controls the splitting of sentences before the translation.\n<p><code>SplitSentences::NONE</code> …\n"],["DeeplAPI::UsageInformation","","DeeplAPI/UsageInformation.html","","<p>Information about API usage &amp; limits for this account.\n"],["exit_on_failure?","DeeplAPI::CLI","DeeplAPI/CLI.html#method-c-exit_on_failure-3F","()",""],["languages","DeeplAPI::CLI","DeeplAPI/CLI.html#method-i-languages","()",""],["new","DeeplAPI::DeepL","DeeplAPI/DeepL.html#method-c-new","(api_key:)","<p>Create an instance by providing a valid API key.\n"],["new","DeeplAPI::UsageInformation","DeeplAPI/UsageInformation.html#method-c-new","(character_limit:, character_count:)",""],["source_languages","DeeplAPI::DeepL","DeeplAPI/DeepL.html#method-i-source_languages","()","<p>Retrieve all currently available source languages.\n<p>See also the vendor documentation.\n<p>Returns a dictionary …\n"],["target_languages","DeeplAPI::DeepL","DeeplAPI/DeepL.html#method-i-target_languages","()","<p>Retrieve all currently available target languages.\n<p>See also the vendor documentation.\n<p>Returns a dictionary …\n"],["translate","DeeplAPI::CLI","DeeplAPI/CLI.html#method-i-translate","()",""],["translate","DeeplAPI::DeepL","DeeplAPI/DeepL.html#method-i-translate","( source_language: nil, target_language:, split_sentences: nil, preserve_formatting: true, formality: Formality::DEFAULT, texts: )","<p>Translate one or more text chunks at once. You can pass in optional\ntranslation options if you need non-default ...\n"],["usage_information","DeeplAPI::CLI","DeeplAPI/CLI.html#method-i-usage_information","()",""],["usage_information","DeeplAPI::DeepL","DeeplAPI/DeepL.html#method-i-usage_information","()","<p>Retrieve information about API usage &amp; limits.\nThis can also be used to verify an API key without ...\n"],["CHANGELOG","","CHANGELOG_md.html","","<p>[0.2.0] - 2021-05-23\n<p>Added support for the DeepL free tier which requires a different API endpoint, which …\n"],["LICENSE","","LICENSE_txt.html","","<p>The MIT License (MIT)\n<p>Copyright © 2021 Martin Gruner\n<p>Permission is hereby granted, free of charge, to …\n"],["README","","README_md.html","","<p>deepl-api-rb\n<p>This repository contains a Ruby implementation of the DeepL REST API.\n<p>Contents\n"],["deepl","","lib/deepl_api/deepl_md.html","","<p><code>deepl</code> command line utility\n<p>Unix-style commandline application for integrating the\nDeepL API into toolchains ...\n"]]}}